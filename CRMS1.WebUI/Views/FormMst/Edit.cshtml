@model CRMS1.Core.ViewModels.FormMstViewModel

@{
    ViewBag.Title = "Edit";
}

<script>
    $(document).ready(function () {
        $('#already').fadeOut(3000);

        var isChecked = false;
        isChecked = "@Model.IsActive";
        if (isChecked) {
            $('#toggle').val(true);
            $('#toggle').toggleClass('active');
        }
        else {
            $('#toggle').val(false);
        }

        var isChecked = false;
        isChecked = "@Model.IsMenu";
        if (isChecked) {
            $('#IsMenu').val(true);
            $('#IsMenu').toggleClass('active');
        }
        else {
            $('#IsMenu').val(false);
        }
    });
</script>

@if (@TempData["formMst"] != null)
{
    <div id="already" class="alert alert-danger">
        <strong>Wrong !</strong> @TempData["formMst"]
    </div>
}

<div class="section">
    <div class="container" style="background-color: white; box-shadow: rgba(0, 0, 0, 0.35) 9px 18px 15px;">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="formDiv">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                <div class="topTitleHead pb20">
                    <h1> Edit Form</h1>
                </div>
                <div class="formSection">
                    <div class="inputBox">
                        <label>Name<strong class="textred">*</strong></label>
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { placeholder = "Name", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                    <div class="inputBox">
                        <label>NavigateURL<strong class="textred">*</strong></label>
                        @Html.EditorFor(model => model.NavigateURL, new { htmlAttributes = new { placeholder = "NavigateURL", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NavigateURL, "", new { @class = "text-danger" })
                    </div>
                    <div class="inputBox selectBox">
                        <label>ParentFormId</label>
                        @Html.DropDownListFor(model => model.ParentFormId, new SelectList(Model.ParentFormDropDown, "Id", "Name"),
                           "Select ParentForm", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ParentFormId, "", new { @class = "text-danger" })
                    </div>
                    <div class="inputBox">
                        <label>FormAccessCode<strong class="textred">*</strong></label>
                        @Html.EditorFor(model => model.FormAccessCode, new { htmlAttributes = new { placeholder = "FormAccessCode", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FormAccessCode, "", new { @class = "text-danger" })
                    </div>
                    <div class="inputBox">
                        <label>DisplayOrder</label>
                        @Html.EditorFor(model => model.DisplayOrder, new { htmlAttributes = new { placeholder = "DisplayOrder", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DisplayOrder, "", new { @class = "text-danger" })
                    </div>
                    <div class="inputBox">
                        <label>IsMenu</label>
                        <label class="switch">
                            <input type="checkbox" id="IsMenu" name="IsMenu" class="form-control" @(Model.IsMenu ? "checked" : "") />
                            <span class="slider round"></span>
                        </label>
                        @Html.ValidationMessageFor(model => model.IsMenu, "", new { @class = "text-danger" })
                    </div>
                    <div class="inputBox">
                        <label>IsActive</label>
                        <label class="switch">
                            <input type="checkbox" id="toggle" name="IsActive" class="form-control" @(Model.IsActive ? "checked" : "") />
                            <span class="slider round"></span>
                        </label>
                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-2">
                        <button class="btnDiv" type="submit">Save</button>
                    </div>
                    <div class="col-md-2">
                        <a href="@Url.Action("Index", "FormMst")" id="Cancel" class="btn btnCancel">Cancel</a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>


<style>
    .switch {
        position: relative;
        display: inline-block;
        width: 60px;
        height: 34px;
    }

        .switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }

    .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        -webkit-transition: .4s;
        transition: .4s;
    }

        .slider:before {
            position: absolute;
            content: "";
            height: 26px;
            width: 26px;
            left: 4px;
            bottom: 4px;
            background-color: white;
            -webkit-transition: .4s;
            transition: .4s;
        }

    input:checked + .slider {
        background-color: #2196F3;
    }

    input:focus + .slider {
        box-shadow: 0 0 1px #2196F3;
    }

    input:checked + .slider:before {
        -webkit-transform: translateX(26px);
        -ms-transform: translateX(26px);
        transform: translateX(26px);
    }

    /* Rounded sliders */
    .slider.round {
        height: 25px;
        width: 50px;
        border-radius: 34px;
    }

        .slider.round:before {
            height: 18px;
            width: 18px;
            border-radius: 50%;
        }
</style>