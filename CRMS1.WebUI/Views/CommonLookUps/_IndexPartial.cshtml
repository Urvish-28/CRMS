@using CRMS1.Core.Models

<script>
    //Create Bootstrap Modal
    function createcommonlookup() {
        $.ajax({
                url: '@Url.Action("Create","CommonLookUps")',
                type: "Get",
                success: function (data) {
                    $("#createPopupModalForm").html(data);
                    $("#addmodal").modal('show');
                }
        });
    }
    //Edit Bootstrap Modal
    function editcommonlookup(data) {
        $.ajax({
            url: '/CommonLookUps/Edit?id=' + data,
            type: "Get",
            data: { 'id': data },
            success: function (res) {
                $("#createPopupModalForm").html(res);
                $("#editmodal").modal('show');
            }
        });
    }

    //Delete
    function confirmDelete(data) {
        if (confirm("Are You Sure You Want To Delete?") == true) {
            $.ajax({
                url: '/CommonLookUps/Delete?id=' + data,
                data: { 'id': data},
                type: "post",
                success: function (savingStatus) {
                    location.reload();
                },
                error: function (xhr, ajaxOptions, thrownError) {
                }
            });
        }
    }

    $(document).ready(function () {
        //Alert Msg
        $('#alert').fadeOut(3000);

        //Search
        $("#FieldFilter").keyup(function () {

            var value = $("#FieldFilter").val();
            grid = $("#CommonLookupgrid").data("kendoGrid");

            if (value) {
                grid.dataSource.filter({ field: "ConfigName", operator: "contains", value: value });
            }
            else {
                grid.dataSource.filter({});
            }
        });
    });
</script>

<div class="align-center align-between pb20">
    <h3>Settings</h3>
    @if (CheckRolePermission.Insert)
    {
        <div class="btnDiv">
            <a class="btn" onclick="createcommonlookup()">+ Add Setting</a>
        </div>
    }
</div>

@if (@TempData["CMAlert"] != null)
{
    <div id="alert" class="alert alert-success">
        <strong>Success !</strong> @TempData["CMAlert"]
    </div>
}

@(
        Html.Kendo().Grid<CRMS1.Core.ViewModels.CommonLookupsViewModel>().Name("CommonLookupgrid")
    .Columns(columns =>
    {
        columns.Bound(expression: c => c.ConfigName);
        columns.Bound(expression: c => c.ConfigKey);
        columns.Bound(expression: c => c.ConfigValue);
        columns.Bound(expression: c => c.DisplayOrder);
        columns.Bound(expression: c => c.Description);
        columns.Bound(p => p.IsActive)
            .Title("Active")
            .Width(90)
            .ClientTemplate(
                        "# if (IsActive) { #" +
                        "<div class=\"img-circle\" style=\"display: flex; justify-content: center; align-items: center;\"><img src=\"/Content/images/check.png\" alt=\"editok\" width=\"22\"></div>" +
                        "# } else { #" +
                        "<div class=\"\" style=\"display: flex; justify-content: center; align-items: center;\"><img src=\"/Content/images/close.png\" alt=\"edit\" width=\"22\"></div>" +
                        "# } #"
                        );
        if (CheckRolePermission.Update || CheckRolePermission.Delete)
        {
            columns.Bound(p => p.Id).ClientTemplate(
             "#if ('" + CheckRolePermission.Update + "'=='True') {#"
             + " <a onclick='editcommonlookup(\"#=Id#\")'><img src=\"/Content/image/edit.svg\" width=\"19\"></img></a>"
             + "#}#"
             +"#if ('" + CheckRolePermission.Delete + "'=='True') {#"
             + " | <a onclick='confirmDelete(\"#=Id#\")'><img src=\"/Content/image/trash.svg\"></img></i></a>"
             + "#}#"
             ).Width(100).Title("Action").Filterable(false);
        }
    })
    .Sortable()
    .Scrollable(h=>h.Height("auto"))
    .Filterable()
    .Pageable(p=>p.Refresh(true).PageSizes(true))
    .DataSource(datasource => datasource
    .Ajax().Read(read => read.Action("CommonLookupGrid", "CommonLookUps"))
    .PageSize(10).Model(model => model.Id(expression:p => p.Id)))
    .ToolBar(toolbar =>
    {
        toolbar.Template(@<text>
                <div class="toolbar">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="input-group">
                                <span class="input-group-addon"><span class="glyphicon glyphicon-search" aria-hidden="true"></span></span>
                                <input type="text" class="form-control" id='FieldFilter' placeholder="Search for...">
                                <span class="input-group-btn">
                                    <button class="btn btn-default" type="button"><span class="glyphicon glyphicon-refresh" aria-hidden="true"></span></button>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
            </text>);
        })
    )

<div id="createPopupModalForm">
    <div class="modal" id="addmodal"></div>
    <div class="modal" id="editmodal"></div>
</div>

