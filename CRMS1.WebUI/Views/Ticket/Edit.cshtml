@model CRMS1.Core.ViewModels.TicketViewModel

@{
    ViewBag.Title = "Edit";
}

<div class="section">
    <div class="container" style="background-color: white; box-shadow: rgba(0, 0, 0, 0.30) 5px 5px 15px;">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            <div class="formDiv">
                <div class="topTitleHead pb20">
                    <h1> Edit Ticket</h1>
                </div>
                <div class="formSection">
                    <div class="inputBox">
                        <label>Title<strong class="textred">*</strong></label>
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { placeholder = "Name", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                    <div class="inputBox selectBox">
                        <label>AssignTo<strong class="textred">*</strong></label>
                        @Html.DropDownListFor(model => model.AssignTo, new SelectList(Model.AssignToDropDown, "Id", "Name"),
                            "Select Employee", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.AssignTo, "", new { @class = "text-danger" })
                    </div>
                    <div class="inputBox selectBox">
                        <label>Type<strong class="textred">*</strong></label>
                        @Html.DropDownListFor(model => model.TypeId, new SelectList(Model.TypeDropDown, "Id", "Name"),
                                   "Select Type", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TypeId, "", new { @class = "text-danger" })
                    </div>
                    <div class="inputBox selectBox">
                        <label>Priority<strong class="textred">*</strong></label>
                        @Html.DropDownListFor(model => model.PriorityId, new SelectList(Model.PriorityDropDown, "Id", "Name"),
                     "Select Priority", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PriorityId, "", new { @class = "text-danger" })
                    </div>
                    <div class="inputBox selectBox">
                        <label>Status<strong class="textred">*</strong></label>
                        @Html.DropDownListFor(model => model.StatusId, new SelectList(Model.StatusDropDown, "Id", "Name"),
                    "Select Status", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })
                    </div>
                    <div class="inputBox">
                        <label>Description</label>
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                    <div class="inputBox">
                        <label>Upload Image</label>
                        @Html.TextBoxFor(model => model.Image, new { type = "file",@class ="form-control" , @id ="imageUploadForm"})
                    </div>
                    @if (Model.Attachments.Count() > 0)
                    {
                        <div class="inputBox">
                            <label>Attachments</label>
                            <table id="table">
                                @foreach (var item in Model.Attachments)
                                {
                                    <tr id="@item.Id">
                                        <td>
                                            <i class="fa fa-paperclip"></i>
                                            <a href="@Url.Action("DownloadImage" , "Ticket", new { id = item.Id })"> @item.FileName </a>
                                        </td>
                                        <td>
                                            <a onclick="DeleteAttachment('@item.Id')"><i class="fa fa-trash"></i></a>
                                        </td>
                                    </tr>
                                }
                            </table>
                        </div>
                    }
                </div>
                <div class="row">
                    <div class="col-md-2">
                        <button class="btnDiv" id="SaveId">Save</button>
                    </div>
                    <div class="col-md-2">
                        <a href="@Url.Action("Index", "Ticket")" id="Cancel" class="btn btnCancel">Cancel</a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<script>
    var ListOfId = new Array();
    function DeleteAttachment(data) {
        document.getElementById(data).style.display = 'none';
        ListOfId.push(data);
    }

    $('#SaveId').click(function () {
        var mydataArray = $("form").serializeArray();
        mydataArray.push({
            name: 'AttachmentListFromView',
            value: JSON.stringify(ListOfId),
        });
        var formdata = new FormData();
        var fileInput = document.getElementById('imageUploadForm').files[0];
        formdata.append('file', fileInput)
        for (var i = 1; i < mydataArray.length; i++) {
            formdata.append(mydataArray[i].name, mydataArray[i].value);
        }
        $.ajax({
            type: "POST",
            url: '/Ticket/Edit/',
            data: formdata,
            dataType: 'json',
            contentType: false,
            processData: false,
            success: function (response) {
                location.reload();
            }
        });
    });
</script>